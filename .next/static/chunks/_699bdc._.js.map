{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelfrederickson/coding/github/budget-calculator-demo/app/components/common/Typography.tsx"],"sourcesContent":["export default function Typography({\n  as: Tag = \"p\",\n  children,\n  currency,\n  className = \"\",\n  onClick,\n}: TypographyProps) {\n  const formattedChildren =\n    currency && typeof children === \"number\"\n      ? `$${children.toFixed(2)}`\n      : children;\n\n  return (\n    <Tag className={className} onClick={onClick}>\n      {formattedChildren}\n    </Tag>\n  );\n}\n\ntype TypographyProps = {\n  as?: \"p\" | \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\" | \"span\" | \"div\";\n  children: number | React.ReactNode;\n  className?: string;\n  currency?: boolean;\n  onClick?: () => void;\n};\n"],"names":[],"mappings":";;;;;AAAe,SAAS,WAAW,EACjC,IAAI,MAAM,GAAG,EACb,QAAQ,EACR,QAAQ,EACR,YAAY,EAAE,EACd,OAAO,EACS;IAChB,MAAM,oBACJ,YAAY,OAAO,aAAa,WAC5B,CAAC,CAAC,EAAE,SAAS,OAAO,CAAC,IAAI,GACzB;IAEN,qBACE,6LAAC;QAAI,WAAW;QAAW,SAAS;kBACjC;;;;;;AAGP;KAjBwB"}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelfrederickson/coding/github/budget-calculator-demo/app/components/Header.tsx"],"sourcesContent":["import Typography from \"./common/Typography\";\n\nexport default function Header() {\n  return (\n    <div className=\"HEADER justify-between leading-none text-[2rem] hidden md:flex\">\n      <Typography className=\"drop-shadow-[0_0_5px_rgba(34,197,94,1)]\">\n        Monthly Budget App (Demo)\n      </Typography>\n      <Typography>{new Date().toLocaleDateString()}</Typography>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,6IAAA,CAAA,UAAU;gBAAC,WAAU;0BAA0C;;;;;;0BAGhE,6LAAC,6IAAA,CAAA,UAAU;0BAAE,IAAI,OAAO,kBAAkB;;;;;;;;;;;;AAGhD;KATwB"}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelfrederickson/coding/github/budget-calculator-demo/app/store/appStore.ts"],"sourcesContent":["import { create } from \"zustand\";\nimport { persist, createJSONStorage } from \"zustand/middleware\";\n\nconst exampleBudgetItems = [\n  {\n    id: 1,\n    name: \"Rent\",\n    cost: 1200.0,\n    freq: \"Monthly\",\n    startDate: \"2023-01-01T12:00:00Z\",\n  },\n  {\n    id: 2,\n    name: \"utilities\",\n    cost: 200.27,\n    freq: \"Monthly\",\n    startDate: \"2024-01-11T12:00:00Z\",\n  },\n  {\n    id: 3,\n    name: \"car insurance\",\n    cost: 1200.0,\n    freq: \"Yearly\",\n    startDate: \"2025-02-22T12:00:00Z\",\n  },\n  {\n    id: 4,\n    name: \"gym membership\",\n    cost: 250.55,\n    freq: \"Yearly\",\n    startDate: \"2022-06-15T12:00:00Z\",\n  },\n  {\n    id: 5,\n    name: \"groceries\",\n    cost: 200.0,\n    freq: \"BiWeekly\",\n    startDate: \"2023-12-10T12:00:00Z\",\n  },\n  {\n    id: 6,\n    name: \"spotify\",\n    cost: 10.99,\n    freq: \"BiWeekly\",\n    startDate: \"2025-01-31T12:00:00Z\",\n  },\n];\n\nconst exampleDebtItems = [\n  {\n    id: 1,\n    name: \"Credit Card\",\n    amount: 5000.0,\n  },\n  {\n    id: 2,\n    name: \"Student Loan\",\n    amount: 14800.5,\n  },\n  {\n    id: 3,\n    name: \"Car Loan\",\n    amount: 9987.23,\n  },\n];\n\nconst storage =\n  typeof window !== \"undefined\"\n    ? createJSONStorage(() => localStorage)\n    : undefined;\n\ninterface IAppState {\n  budgetItems: IBudgetItem[];\n  debtItems: IDebtItem[];\n  monthlyIncome: number;\n  split: boolean;\n  budgetItemsSorted: boolean;\n  editingIncome: boolean;\n  addingDebtItem: boolean;\n  addingBudgetItem: \"Default\" | \"BiWeekly\" | \"Monthly\" | \"Yearly\" | \"\";\n  nearestPaymentDate?: string;\n  loading: boolean;\n  setAppState: (payload: Partial<IAppState>) => void;\n}\n\ninterface IBudgetItem {\n  id: number;\n  name: string;\n  cost: number;\n  freq: string;\n  startDate: string;\n}\n\ninterface IDebtItem {\n  id: number;\n  name: string;\n  amount: number;\n}\n\nconst useAppStore = create<IAppState>()(\n  persist(\n    (set) => ({\n      budgetItems: exampleBudgetItems,\n      debtItems: exampleDebtItems,\n      monthlyIncome: 5000,\n      split: false,\n      budgetItemsSorted: false,\n      editingIncome: false,\n      addingDebtItem: false,\n      addingBudgetItem: \"\",\n      nextPaymentDate: \"\",\n      loading: true,\n      setAppState: (payload) => set((state) => ({ ...state, ...payload })),\n    }),\n    {\n      name: \"app-storage\",\n      storage,\n    }\n  )\n);\n\nexport default useAppStore;\n"],"names":[],"mappings":";;;AACA;AADA;;;AAGA,MAAM,qBAAqB;IACzB;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,MAAM;QACN,WAAW;IACb;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,MAAM;QACN,WAAW;IACb;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,MAAM;QACN,WAAW;IACb;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,MAAM;QACN,WAAW;IACb;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,MAAM;QACN,WAAW;IACb;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,MAAM;QACN,WAAW;IACb;CACD;AAED,MAAM,mBAAmB;IACvB;QACE,IAAI;QACJ,MAAM;QACN,QAAQ;IACV;IACA;QACE,IAAI;QACJ,MAAM;QACN,QAAQ;IACV;IACA;QACE,IAAI;QACJ,MAAM;QACN,QAAQ;IACV;CACD;AAED,MAAM,UACJ,uCACI,CAAA,GAAA,gJAAA,CAAA,oBAAiB,AAAD,EAAE,IAAM;AA+B9B,MAAM,cAAc,CAAA,GAAA,2IAAA,CAAA,SAAM,AAAD,IACvB,CAAA,GAAA,gJAAA,CAAA,UAAO,AAAD,EACJ,CAAC,MAAQ,CAAC;QACR,aAAa;QACb,WAAW;QACX,eAAe;QACf,OAAO;QACP,mBAAmB;QACnB,eAAe;QACf,gBAAgB;QAChB,kBAAkB;QAClB,iBAAiB;QACjB,SAAS;QACT,aAAa,CAAC,UAAY,IAAI,CAAC,QAAU,CAAC;oBAAE,GAAG,KAAK;oBAAE,GAAG,OAAO;gBAAC,CAAC;IACpE,CAAC,GACD;IACE,MAAM;IACN;AACF;uCAIW"}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelfrederickson/coding/github/budget-calculator-demo/app/components/BreakdownCell.tsx"],"sourcesContent":["import Typography from \"./common/Typography\";\nimport { useState } from \"react\";\nimport { faEdit } from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport useAppStore from \"../store/appStore\";\n\nexport default function BreakdownCell({\n  title,\n  amount,\n  editable = false,\n  className = \"\",\n}: IBreakdownCellProps) {\n  const [hover, setHover] = useState(false);\n  const { editingIncome, setAppState } = useAppStore();\n\n  const hoverStyling = \"md:bg-green-900 cursor-pointer\";\n\n  return (\n    <div\n      className={`BREAKDOWN-CELL relative flex flex-row justify-between p-2 md:px-0 md:flex-col items-center leading-none md:relative border-green-300 md:py-5 group\n      ${hover && editable ? hoverStyling : \"\"}\n      ${className}`}\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n      onClick={showEditForm}\n    >\n      {editable && !editingIncome && (\n        <FontAwesomeIcon\n          icon={faEdit}\n          className=\"absolute top-[2px] text-[.6rem] left-[3px] md:left-auto md:text-[.9rem] md:top-1 md:right-1\"\n        />\n      )}\n      <Typography\n        className={`md:absolute md:left-1 md:top-1 font-semibold text-[1.1rem]\n        `}\n      >\n        {title}\n      </Typography>\n\n      <Typography className=\"text-[2rem]\" currency>\n        {amount}\n      </Typography>\n      <Typography className=\"hidden text-[1.2rem] opacity-70 md:block\" currency>\n        {amount / 2}\n      </Typography>\n    </div>\n  );\n\n  function showEditForm(): void {\n    if (!editable) return;\n    setAppState({ editingIncome: true });\n  }\n}\n\ninterface IBreakdownCellProps {\n  title: string;\n  amount: number;\n  editable?: boolean;\n  className?: string;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AAEA;AAEA;AAHA;;;;;;;;AAKe,SAAS,cAAc,EACpC,KAAK,EACL,MAAM,EACN,WAAW,KAAK,EAChB,YAAY,EAAE,EACM;;IACpB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,EAAE,aAAa,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,2HAAA,CAAA,UAAW,AAAD;IAEjD,MAAM,eAAe;IAErB,qBACE,6LAAC;QACC,WAAW,CAAC;MACZ,EAAE,SAAS,WAAW,eAAe,GAAG;MACxC,EAAE,WAAW;QACb,cAAc,IAAM,SAAS;QAC7B,cAAc,IAAM,SAAS;QAC7B,SAAS;;YAER,YAAY,CAAC,+BACZ,6LAAC,uKAAA,CAAA,kBAAe;gBACd,MAAM,6KAAA,CAAA,SAAM;gBACZ,WAAU;;;;;;0BAGd,6LAAC,6IAAA,CAAA,UAAU;gBACT,WAAW,CAAC;QACZ,CAAC;0BAEA;;;;;;0BAGH,6LAAC,6IAAA,CAAA,UAAU;gBAAC,WAAU;gBAAc,QAAQ;0BACzC;;;;;;0BAEH,6LAAC,6IAAA,CAAA,UAAU;gBAAC,WAAU;gBAA2C,QAAQ;0BACtE,SAAS;;;;;;;;;;;;;IAKhB,SAAS;QACP,IAAI,CAAC,UAAU;QACf,YAAY;YAAE,eAAe;QAAK;IACpC;AACF;GA9CwB;;QAOiB,2HAAA,CAAA,UAAW;;;KAP5B"}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 274, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelfrederickson/coding/github/budget-calculator-demo/app/components/common/InputField.tsx"],"sourcesContent":["export default function InputField({\n  inputName,\n  value,\n  maxLength,\n  className = \"\",\n  inputRef,\n  onChange,\n}: IInputFieldProps) {\n  const name = parseCamelCase(inputName);\n\n  return (\n    <input\n      className={`\n        INPUT-FIELD border border-green-300 bg-transparent\n        p-2 focus:outline-none focus:border-[3px]\n        ${className}\n      `}\n      id={name}\n      name={name}\n      placeholder={name}\n      value={value}\n      ref={inputRef}\n      maxLength={maxLength || 50}\n      onChange={handleChange}\n    />\n  );\n\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n    onChange(inputName, e.target.value);\n  }\n\n  function parseCamelCase(str: string): string {\n    return str\n      .replace(/([A-Z])/g, \" $1\")\n      .replace(/^./, (char) => char.toUpperCase());\n  }\n}\n\ninterface IInputFieldProps {\n  inputName: string;\n  value: string;\n  maxLength?: number;\n  className?: string;\n  inputRef?: React.RefObject<HTMLInputElement | null>;\n  onChange: (inputName: string, value: string) => void;\n}\n"],"names":[],"mappings":";;;;;AAAe,SAAS,WAAW,EACjC,SAAS,EACT,KAAK,EACL,SAAS,EACT,YAAY,EAAE,EACd,QAAQ,EACR,QAAQ,EACS;IACjB,MAAM,OAAO,eAAe;IAE5B,qBACE,6LAAC;QACC,WAAW,CAAC;;;QAGV,EAAE,UAAU;MACd,CAAC;QACD,IAAI;QACJ,MAAM;QACN,aAAa;QACb,OAAO;QACP,KAAK;QACL,WAAW,aAAa;QACxB,UAAU;;;;;;;IAId,SAAS,aAAa,CAAsC;QAC1D,SAAS,WAAW,EAAE,MAAM,CAAC,KAAK;IACpC;IAEA,SAAS,eAAe,GAAW;QACjC,OAAO,IACJ,OAAO,CAAC,YAAY,OACpB,OAAO,CAAC,MAAM,CAAC,OAAS,KAAK,WAAW;IAC7C;AACF;KApCwB"}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 319, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelfrederickson/coding/github/budget-calculator-demo/app/components/common/Button.tsx"],"sourcesContent":["export default function Button({\n  className,\n  children,\n  style,\n  type = \"button\",\n  onClick,\n  onMouseEnter,\n  onMouseLeave,\n}: IButtonProps) {\n  return (\n    <button\n      type={type}\n      className={`BUTTON flex justify-center items-center border px-4 ${className}`}\n      onClick={onClick}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      style={style}\n    >\n      {children}\n    </button>\n  );\n}\n\ninterface IButtonProps {\n  className?: string;\n  style?: React.CSSProperties;\n  type?: \"button\" | \"submit\" | \"reset\";\n  onClick?: (e) => void;\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n  children: React.ReactNode;\n}\n"],"names":[],"mappings":";;;;;AAAe,SAAS,OAAO,EAC7B,SAAS,EACT,QAAQ,EACR,KAAK,EACL,OAAO,QAAQ,EACf,OAAO,EACP,YAAY,EACZ,YAAY,EACC;IACb,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAC,oDAAoD,EAAE,WAAW;QAC7E,SAAS;QACT,cAAc;QACd,cAAc;QACd,OAAO;kBAEN;;;;;;AAGP;KArBwB"}},
    {"offset": {"line": 345, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 351, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelfrederickson/coding/github/budget-calculator-demo/app/components/EditIncomeForm.tsx"],"sourcesContent":["import InputField from \"./common/InputField\";\nimport Button from \"./common/Button\";\nimport Typography from \"./common/Typography\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-regular-svg-icons\";\nimport { faBan } from \"@fortawesome/free-solid-svg-icons\";\nimport { useState, useEffect, useRef } from \"react\";\nimport useAppStore from \"../store/appStore\";\n\nexport default function EditIncomeForm({\n  initialAmount,\n}: IEditIncomeFormProps) {\n  const [income, setIncome] = useState(initialAmount);\n  const { editingIncome, setAppState } = useAppStore();\n\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (editingIncome && inputRef.current) {\n      inputRef.current.focus();\n      inputRef.current.setSelectionRange(0, inputRef.current.value.length);\n    }\n  }, [editingIncome]);\n\n  return (\n    <form\n      className=\"EDIT-INCOME-FORM relative flex items-center justify-center border-b md:border-r border-green-300 p-1 md:py-0 md:px-2\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"flex gap-[1px] h-[45px] md:h-[55px] w-full\">\n        <Typography\n          className={`\n            absolute left-1 top-1 font-semibold text-[.9rem] leading-none\n            ${editingIncome && \"hidden md:inline\"}\n          `}\n        >\n          Income\n        </Typography>\n        <InputField\n          inputName=\"cost\"\n          value={income}\n          inputRef={inputRef}\n          onChange={handleChange}\n          className=\"text-[1.8rem] flex-grow min-w-[10rem]\"\n        />\n        <Button\n          onClick={handleSubmit}\n          className={`text-[2rem] w-[52px] font-arial font-bold md:hover:bg-green-300 border-green-300 md:hover:text-black active:bg-white active:border-white ml-1 active:text-black`}\n        >\n          <FontAwesomeIcon icon={faSave} />\n        </Button>\n        <Button\n          onClick={() => setAppState({ editingIncome: false })}\n          className={`text-[2rem] w-[52px] font-arial font-bold md:hover:bg-green-300 border-green-300 md:hover:text-black active:bg-white active:border-white ml-1 active:text-black`}\n        >\n          <FontAwesomeIcon icon={faBan} />\n        </Button>\n      </div>\n    </form>\n  );\n\n  function formatCurrency(value: string): string {\n    if (value === \"\") return \"0.00\";\n\n    const numericValue = value.replace(/\\D/g, \"\");\n    const paddedValue = numericValue.padStart(3, \"0\");\n    const dollars = paddedValue.slice(0, -2);\n    const cents = paddedValue.slice(-2);\n    return `${Number(dollars)}.${cents}`;\n  }\n\n  function handleChange(inputName: string, value: string): void {\n    setIncome(formatCurrency(value));\n  }\n\n  async function handleSubmit(e: React.FormEvent) {\n    e.preventDefault();\n    setAppState({ monthlyIncome: Number(income), editingIncome: false });\n  }\n}\n\ninterface IEditIncomeFormProps {\n  initialAmount: string;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AAGA;AACA;AAHA;AACA;;;;;;;;;;;AAIe,SAAS,eAAe,EACrC,aAAa,EACQ;;IACrB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,EAAE,aAAa,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,2HAAA,CAAA,UAAW,AAAD;IAEjD,MAAM,WAAW,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAoB;IAE1C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,IAAI,iBAAiB,SAAS,OAAO,EAAE;gBACrC,SAAS,OAAO,CAAC,KAAK;gBACtB,SAAS,OAAO,CAAC,iBAAiB,CAAC,GAAG,SAAS,OAAO,CAAC,KAAK,CAAC,MAAM;YACrE;QACF;mCAAG;QAAC;KAAc;IAElB,qBACE,6LAAC;QACC,WAAU;QACV,UAAU;kBAEV,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC,6IAAA,CAAA,UAAU;oBACT,WAAW,CAAC;;YAEV,EAAE,iBAAiB,mBAAmB;UACxC,CAAC;8BACF;;;;;;8BAGD,6LAAC,6IAAA,CAAA,UAAU;oBACT,WAAU;oBACV,OAAO;oBACP,UAAU;oBACV,UAAU;oBACV,WAAU;;;;;;8BAEZ,6LAAC,yIAAA,CAAA,UAAM;oBACL,SAAS;oBACT,WAAW,CAAC,+JAA+J,CAAC;8BAE5K,cAAA,6LAAC,uKAAA,CAAA,kBAAe;wBAAC,MAAM,6KAAA,CAAA,SAAM;;;;;;;;;;;8BAE/B,6LAAC,yIAAA,CAAA,UAAM;oBACL,SAAS,IAAM,YAAY;4BAAE,eAAe;wBAAM;oBAClD,WAAW,CAAC,+JAA+J,CAAC;8BAE5K,cAAA,6LAAC,uKAAA,CAAA,kBAAe;wBAAC,MAAM,2KAAA,CAAA,QAAK;;;;;;;;;;;;;;;;;;;;;;;IAMpC,SAAS,eAAe,KAAa;QACnC,IAAI,UAAU,IAAI,OAAO;QAEzB,MAAM,eAAe,MAAM,OAAO,CAAC,OAAO;QAC1C,MAAM,cAAc,aAAa,QAAQ,CAAC,GAAG;QAC7C,MAAM,UAAU,YAAY,KAAK,CAAC,GAAG,CAAC;QACtC,MAAM,QAAQ,YAAY,KAAK,CAAC,CAAC;QACjC,OAAO,GAAG,OAAO,SAAS,CAAC,EAAE,OAAO;IACtC;IAEA,SAAS,aAAa,SAAiB,EAAE,KAAa;QACpD,UAAU,eAAe;IAC3B;IAEA,eAAe,aAAa,CAAkB;QAC5C,EAAE,cAAc;QAChB,YAAY;YAAE,eAAe,OAAO;YAAS,eAAe;QAAM;IACpE;AACF;GAtEwB;;QAIiB,2HAAA,CAAA,UAAW;;;KAJ5B"}},
    {"offset": {"line": 490, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 496, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelfrederickson/coding/github/budget-calculator-demo/app/components/common/PanelHeader.tsx"],"sourcesContent":["import Typography from \"../common/Typography\";\nimport Button from \"../common/Button\";\nimport { useState } from \"react\";\n\nexport default function PanelHeader({\n  defaultText,\n  collapsed,\n  groupFreq = \"Default\",\n  onButtonClick,\n  setCollapsed,\n}: IPanelHeaderProps) {\n  const [headerText, setHeaderText] = useState(defaultText);\n  const [headerDisabled, setHeaderDisabled] = useState(false);\n\n  return (\n    <div\n      className={`\n        PANEL-HEADER ${groupFreq}-filled ${defaultText === headerText ? \"\" : `${groupFreq}-hover`}\n        px-2 cursor-pointer flex justify-between items-center md:h-8 h-12 active:bg-white active:border-white\n      `}\n      onMouseEnter={handleHeaderHover}\n      onMouseLeave={() => setHeaderText(defaultText)}\n    >\n      {/* Desktop */}\n      <Typography\n        className=\"text-black font-bold hidden md:inline flex-grow\"\n        onClick={handleHeaderClick}\n      >\n        {headerText}\n      </Typography>\n\n      {/* Mobile */}\n      <Typography\n        className=\"text-black font-bold md:hidden flex-grow\"\n        onClick={handleHeaderClick}\n      >\n        {defaultText}\n      </Typography>\n\n      {onButtonClick && (\n        <Button\n          className={`${groupFreq}-outline ${groupFreq}-hover font-arial bg-black outline outline-black h-[80%] font-bold md:hover:text-black active:border-white active:bg-white z-10`}\n          onClick={handleButtonClick}\n          onMouseEnter={handleButtonHover}\n          onMouseLeave={handleButtonLeave}\n        >\n          +\n        </Button>\n      )}\n    </div>\n  );\n\n  function handleHeaderHover() {\n    if (collapsed) {\n      setHeaderText(\"EXPAND\");\n    } else {\n      setHeaderText(\"COLLAPSE\");\n    }\n  }\n\n  function handleHeaderClick() {\n    if (headerDisabled) return;\n    setCollapsed(!collapsed);\n    if (headerText === \"EXPAND\") {\n      setHeaderText(\"COLLAPSE\");\n    } else {\n      setHeaderText(\"EXPAND\");\n    }\n  }\n\n  function handleButtonHover() {\n    setHeaderDisabled(true);\n    setHeaderText(defaultText);\n  }\n\n  function handleButtonLeave() {\n    setHeaderDisabled(false);\n    handleHeaderHover();\n  }\n\n  function handleButtonClick() {\n    if (collapsed) setCollapsed(false);\n    if (onButtonClick) onButtonClick();\n  }\n}\n\ninterface IPanelHeaderProps {\n  defaultText: string;\n  collapsed: boolean;\n  groupFreq?: string;\n  onButtonClick?: () => void;\n  setCollapsed: (collapsed: boolean) => void;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;;AAEe,SAAS,YAAY,EAClC,WAAW,EACX,SAAS,EACT,YAAY,SAAS,EACrB,aAAa,EACb,YAAY,EACM;;IAClB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErD,qBACE,6LAAC;QACC,WAAW,CAAC;qBACG,EAAE,UAAU,QAAQ,EAAE,gBAAgB,aAAa,KAAK,GAAG,UAAU,MAAM,CAAC,CAAC;;MAE5F,CAAC;QACD,cAAc;QACd,cAAc,IAAM,cAAc;;0BAGlC,6LAAC,6IAAA,CAAA,UAAU;gBACT,WAAU;gBACV,SAAS;0BAER;;;;;;0BAIH,6LAAC,6IAAA,CAAA,UAAU;gBACT,WAAU;gBACV,SAAS;0BAER;;;;;;YAGF,+BACC,6LAAC,yIAAA,CAAA,UAAM;gBACL,WAAW,GAAG,UAAU,SAAS,EAAE,UAAU,+HAA+H,CAAC;gBAC7K,SAAS;gBACT,cAAc;gBACd,cAAc;0BACf;;;;;;;;;;;;;IAOP,SAAS;QACP,IAAI,WAAW;YACb,cAAc;QAChB,OAAO;YACL,cAAc;QAChB;IACF;IAEA,SAAS;QACP,IAAI,gBAAgB;QACpB,aAAa,CAAC;QACd,IAAI,eAAe,UAAU;YAC3B,cAAc;QAChB,OAAO;YACL,cAAc;QAChB;IACF;IAEA,SAAS;QACP,kBAAkB;QAClB,cAAc;IAChB;IAEA,SAAS;QACP,kBAAkB;QAClB;IACF;IAEA,SAAS;QACP,IAAI,WAAW,aAAa;QAC5B,IAAI,eAAe;IACrB;AACF;GAhFwB;KAAA"}},
    {"offset": {"line": 592, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 598, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelfrederickson/coding/github/budget-calculator-demo/app/components/Breakdown.tsx"],"sourcesContent":["import BreakdownCell from \"./BreakdownCell\";\nimport EditIncomeForm from \"./EditIncomeForm\";\nimport PanelHeader from \"./common/PanelHeader\";\nimport { useState } from \"react\";\n\nimport useAppStore from \"../store/appStore\";\n\nexport default function Breakdown({\n  monthlyTotal,\n  monthlyIncome,\n}: IBreakdownProps) {\n  const [collapsed, setCollapsed] = useState(false);\n  const { editingIncome } = useAppStore();\n\n  const monthlyRemaining: number = monthlyIncome - monthlyTotal;\n\n  return (\n    <div className=\"BREAKDOWN flex flex-col border Default-outline\">\n      <PanelHeader\n        defaultText=\"Monthly Breakdown\"\n        collapsed={collapsed}\n        setCollapsed={setCollapsed}\n      />\n      <div\n        className={`grid grid-cols-1 text-center border-2 border-green-300 md:grid-cols-3 ${\n          collapsed ? \"hidden\" : \"\"\n        } ${monthlyRemaining < 0 ? \"text-red-600\" : \"\"}`}\n      >\n        {editingIncome ? (\n          <EditIncomeForm initialAmount={monthlyIncome.toFixed(2)} />\n        ) : (\n          <BreakdownCell\n            title=\"Income\"\n            amount={monthlyIncome}\n            className=\"border-b md:border-r\"\n            editable\n          />\n        )}\n        <BreakdownCell\n          title=\"Total\"\n          amount={monthlyTotal}\n          className=\"border-b md:border-r\"\n        />\n        <BreakdownCell title=\"Remaining\" amount={monthlyRemaining} />\n      </div>\n    </div>\n  );\n}\n\ninterface IBreakdownProps {\n  monthlyTotal: number;\n  monthlyIncome: number;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AAEA;;;;;;;;AAEe,SAAS,UAAU,EAChC,YAAY,EACZ,aAAa,EACG;;IAChB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,2HAAA,CAAA,UAAW,AAAD;IAEpC,MAAM,mBAA2B,gBAAgB;IAEjD,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,8IAAA,CAAA,UAAW;gBACV,aAAY;gBACZ,WAAW;gBACX,cAAc;;;;;;0BAEhB,6LAAC;gBACC,WAAW,CAAC,sEAAsE,EAChF,YAAY,WAAW,GACxB,CAAC,EAAE,mBAAmB,IAAI,iBAAiB,IAAI;;oBAE/C,8BACC,6LAAC,uIAAA,CAAA,UAAc;wBAAC,eAAe,cAAc,OAAO,CAAC;;;;;6CAErD,6LAAC,sIAAA,CAAA,UAAa;wBACZ,OAAM;wBACN,QAAQ;wBACR,WAAU;wBACV,QAAQ;;;;;;kCAGZ,6LAAC,sIAAA,CAAA,UAAa;wBACZ,OAAM;wBACN,QAAQ;wBACR,WAAU;;;;;;kCAEZ,6LAAC,sIAAA,CAAA,UAAa;wBAAC,OAAM;wBAAY,QAAQ;;;;;;;;;;;;;;;;;;AAIjD;GAxCwB;;QAKI,2HAAA,CAAA,UAAW;;;KALf"}},
    {"offset": {"line": 691, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 697, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelfrederickson/coding/github/budget-calculator-demo/app/components/common/CostInfo.tsx"],"sourcesContent":["import Typography from \"./Typography\";\n\nexport default function CostInfo({ amount, className = \"\" }: ICostInfoProps) {\n  return (\n    <div\n      className={`COST-INFO flex flex-col items-end leading-none ${className}`}\n    >\n      <Typography currency>{amount}</Typography>\n      <Typography className=\"opacity-70 text-[.6em] hidden md:block\" currency>\n        {amount / 2}\n      </Typography>\n    </div>\n  );\n}\n\ninterface ICostInfoProps {\n  amount: number;\n  className?: string;\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS,SAAS,EAAE,MAAM,EAAE,YAAY,EAAE,EAAkB;IACzE,qBACE,6LAAC;QACC,WAAW,CAAC,+CAA+C,EAAE,WAAW;;0BAExE,6LAAC,6IAAA,CAAA,UAAU;gBAAC,QAAQ;0BAAE;;;;;;0BACtB,6LAAC,6IAAA,CAAA,UAAU;gBAAC,WAAU;gBAAyC,QAAQ;0BACpE,SAAS;;;;;;;;;;;;AAIlB;KAXwB"}},
    {"offset": {"line": 738, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 744, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelfrederickson/coding/github/budget-calculator-demo/utils/helpers.ts"],"sourcesContent":["import { addMonths, isAfter, lastDayOfMonth, parseISO } from \"date-fns\";\n\nfunction toCamelCase(obj: any): any {\n  if (Array.isArray(obj)) {\n    return obj.map(toCamelCase); // Recursively convert array items\n  } else if (obj !== null && typeof obj === \"object\") {\n    return Object.fromEntries(\n      Object.entries(obj).map(([key, value]) => [\n        key.replace(/_([a-z])/g, (_, letter) => letter.toUpperCase()), // Convert snake_case to camelCase\n        toCamelCase(value), // Recursively convert nested objects\n      ])\n    );\n  }\n  return obj;\n}\n\nfunction sortByDay(items: IBudgetItem[]): IBudgetItem[] {\n  const sorted = items.sort((a, b) => {\n    const aDate = new Date(a.startDate);\n    const bDate = new Date(b.startDate);\n\n    return aDate.getDate() - bDate.getDate();\n  });\n\n  return sorted;\n}\n\nfunction getNextPaymentDate(startDate: string): Date {\n  let paymentDate = parseISO(startDate);\n  const today = new Date().toISOString();\n\n  while (!isAfter(paymentDate, today)) {\n    paymentDate = addMonths(paymentDate, 1);\n\n    if (paymentDate.getDate() !== parseISO(startDate).getDate()) {\n      paymentDate = lastDayOfMonth(paymentDate);\n    }\n  }\n  return paymentDate;\n}\n\nfunction getNextPaymentDateUS(startDate: string): string {\n  let paymentDate = parseISO(startDate);\n  const today = new Date().toISOString();\n\n  while (!isAfter(paymentDate, today)) {\n    paymentDate = addMonths(paymentDate, 1);\n\n    if (paymentDate.getDate() !== parseISO(startDate).getDate()) {\n      paymentDate = lastDayOfMonth(paymentDate);\n    }\n  }\n\n  return formatDateUS(paymentDate.toISOString());\n}\n\nfunction formatDateUS(dateISO: string, shortenYear: boolean = false): string {\n  const [year, month, day] = dateISO.split(\"T\")[0].split(\"-\");\n\n  return shortenYear\n    ? `${month}/${day}/${year.slice(2)}`\n    : `${month}/${day}/${year}`;\n}\n\nfunction sortByFullDate(items: IBudgetItem[]): IBudgetItem[] {\n  const sorted = items.sort((a, b) => {\n    const aDate = getNextPaymentDate(a.startDate);\n    const bDate = getNextPaymentDate(b.startDate);\n\n    return aDate.getTime() - bDate.getTime();\n  });\n\n  return sorted;\n}\n\nfunction calculateMonthly(cost: number, freq: string): number {\n  if (freq === \"Monthly\") return cost;\n\n  const freqMapping = { BiWeekly: 0.5, Monthly: 1, Yearly: 12 };\n  const monthly = Number(cost) / freqMapping[freq];\n\n  return monthly;\n}\n\nfunction capitalize(string: string): string {\n  const wordsToIgnore = [\n    \"a\",\n    \"an\",\n    \"as\",\n    \"at\",\n    \"and\",\n    \"by\",\n    \"but\",\n    \"or\",\n    \"the\",\n    \"of\",\n    \"for\",\n    \"on\",\n    \"to\",\n  ];\n\n  const words = string.split(\" \");\n\n  const capitalizedWords = words.map((word, i) => {\n    if (i === 0 || !wordsToIgnore.includes(word)) {\n      return word.charAt(0).toUpperCase() + word.slice(1);\n    } else {\n      return word;\n    }\n  });\n  return capitalizedWords.join(\" \");\n}\n\n//--INTERFACES---------------------------------------//\n\ninterface IBudgetItem {\n  id: number;\n  name: string;\n  cost: number;\n  freq: string;\n  startDate: string;\n}\n\n//--EXPORTS-----------------------------------------//\n\nexport {\n  getNextPaymentDate,\n  getNextPaymentDateUS,\n  formatDateUS,\n  calculateMonthly,\n  sortByFullDate,\n  capitalize,\n  toCamelCase,\n  sortByDay,\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 852, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 858, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelfrederickson/coding/github/budget-calculator-demo/app/components/common/DateInfo.tsx"],"sourcesContent":["import Typography from \"./Typography\";\nimport { formatDateUS, getNextPaymentDateUS } from \"@/utils/helpers\";\n\nexport default function DateInfo({\n  startDate,\n  className = \"\",\n}: IDateInfoProps) {\n  const nextPaymentDate = getNextPaymentDateUS(startDate);\n  const initialStartDate = formatDateUS(startDate, true);\n\n  return (\n    <div\n      className={`DATE-INFO flex flex-col items-end leading-none ${className}`}\n    >\n      <Typography>{nextPaymentDate}</Typography>\n      <Typography className=\"opacity-70 text-[.6em]\">\n        {`Est. ${initialStartDate}`}\n      </Typography>\n    </div>\n  );\n}\n\ninterface IDateInfoProps {\n  startDate: string;\n  className?: string;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS,SAAS,EAC/B,SAAS,EACT,YAAY,EAAE,EACC;IACf,MAAM,kBAAkB,CAAA,GAAA,mHAAA,CAAA,uBAAoB,AAAD,EAAE;IAC7C,MAAM,mBAAmB,CAAA,GAAA,mHAAA,CAAA,eAAY,AAAD,EAAE,WAAW;IAEjD,qBACE,6LAAC;QACC,WAAW,CAAC,+CAA+C,EAAE,WAAW;;0BAExE,6LAAC,6IAAA,CAAA,UAAU;0BAAE;;;;;;0BACb,6LAAC,6IAAA,CAAA,UAAU;gBAAC,WAAU;0BACnB,CAAC,KAAK,EAAE,kBAAkB;;;;;;;;;;;;AAInC;KAjBwB"}},
    {"offset": {"line": 901, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 907, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelfrederickson/coding/github/budget-calculator-demo/app/components/common/Chip.tsx"],"sourcesContent":["import Typography from \"./Typography\";\nimport { faTrashCan } from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default function Chip({ freq, cost, className, onClick }: IChipProps) {\n  const freqStyling = {\n    BiWeekly: \"md:hover:bg-blue-400\",\n    Monthly: \"md:hover:bg-green-400\",\n    Yearly: \"md:hover:bg-red-400\",\n  };\n\n  return (\n    <div\n      className={`CHIP relative w-[3rem] md:w-[6.5rem] h-[2.8rem] flex flex-col items-center justify-center text-center bg-black py-1 border-2 justify-self-end leading-none text-[1.1rem] font-semibold cursor-pointer group active:bg-white active:border-white ${freqStyling[freq]} ${freq}-outline ${className}`}\n      onClick={onClick}\n    >\n      {/* Desktop */}\n      <Typography className=\"hidden md:block md:group-hover:hidden\">\n        {freq}\n      </Typography>\n\n      {/* Mobile */}\n      <Typography className=\"md:hidden block md:group-hover:hidden active:text-black active:bg-white active:border-white\">\n        {freq[0]}\n        <FontAwesomeIcon\n          icon={faTrashCan}\n          className=\"absolute right-[3px] top-[3px] text-[.7rem]\"\n        />\n      </Typography>\n      <Typography\n        currency\n        className=\"hidden md:block text-[.8rem] md:group-hover:hidden\"\n      >\n        {cost}\n      </Typography>\n      <Typography className=\"hidden md:group-hover:block md:group-hover:text-black text-[1.4rem]\">\n        <FontAwesomeIcon icon={faTrashCan} />\n      </Typography>\n    </div>\n  );\n}\n\ninterface IChipProps {\n  freq: string;\n  cost: number;\n  className?: string;\n  onClick?: () => void;\n}\n"],"names":[],"mappings":";;;;AAAA;AAEA;AADA;;;;;AAGe,SAAS,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAc;IACzE,MAAM,cAAc;QAClB,UAAU;QACV,SAAS;QACT,QAAQ;IACV;IAEA,qBACE,6LAAC;QACC,WAAW,CAAC,gPAAgP,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,SAAS,EAAE,WAAW;QAC9S,SAAS;;0BAGT,6LAAC,6IAAA,CAAA,UAAU;gBAAC,WAAU;0BACnB;;;;;;0BAIH,6LAAC,6IAAA,CAAA,UAAU;gBAAC,WAAU;;oBACnB,IAAI,CAAC,EAAE;kCACR,6LAAC,uKAAA,CAAA,kBAAe;wBACd,MAAM,6KAAA,CAAA,aAAU;wBAChB,WAAU;;;;;;;;;;;;0BAGd,6LAAC,6IAAA,CAAA,UAAU;gBACT,QAAQ;gBACR,WAAU;0BAET;;;;;;0BAEH,6LAAC,6IAAA,CAAA,UAAU;gBAAC,WAAU;0BACpB,cAAA,6LAAC,uKAAA,CAAA,kBAAe;oBAAC,MAAM,6KAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;AAIzC;KApCwB"}},
    {"offset": {"line": 990, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 996, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelfrederickson/coding/github/budget-calculator-demo/app/components/BudgetItem.tsx"],"sourcesContent":["import Typography from \"./common/Typography\";\nimport CostInfo from \"./common/CostInfo\";\nimport DateInfo from \"./common/DateInfo\";\nimport Chip from \"./common/Chip\";\nimport { calculateMonthly, capitalize } from \"@/utils/helpers\";\nimport useAppStore from \"../store/appStore\";\n\nexport default function BudgetItem({ item, className }: IBudgetItemProps) {\n  const {\n    budgetItems,\n    nearestPaymentDate,\n    split,\n    budgetItemsSorted,\n    setAppState,\n  } = useAppStore();\n\n  const highlight =\n    (nearestPaymentDate && !budgetItemsSorted) || split\n      ? item?.startDate?.slice(8, 10) === nearestPaymentDate?.slice(8, 10)\n      : false;\n\n  return (\n    <div\n      className={`\n        BUDGET-ITEM grid grid-cols-4 items-center p-2 border text-[1.4rem]\n        ${determineStyling()} ${className}\n      `}\n    >\n      <Typography>{capitalize(item.name)}</Typography>\n      <CostInfo amount={calculateMonthly(item.cost, item.freq)} />\n      <DateInfo startDate={item.startDate} />\n      <Chip\n        freq={item.freq}\n        cost={item.cost}\n        onClick={deleteItem}\n        className={highlight ? \"outline outline-black\" : \"\"}\n      />\n    </div>\n  );\n\n  async function deleteItem(): Promise<void> {\n    try {\n      const filtered: IBudgetItem[] = budgetItems.filter(\n        (bItem) => bItem.id !== item.id\n      );\n      setAppState({ budgetItems: filtered });\n    } catch (err) {\n      console.error(\"ERROR: Failed to delete budget item:\", err);\n    }\n  }\n\n  function determineStyling(): string {\n    let className = ``;\n    if (split && !highlight) {\n      className += `${item.freq}-outline `;\n    } else if (split && highlight) {\n      className += `${item.freq}-filled font-bold !border-2 !border-black `;\n    } else if (!split && highlight) {\n      className += \"Default-filled font-bold !border-2 !border-black \";\n    } else if (!split && !highlight) {\n      className += \"Default-outline \";\n    }\n    return className;\n  }\n}\n\ninterface IBudgetItemProps {\n  item: IBudgetItem;\n  className?: string;\n  groupFreq?: string;\n}\n\ninterface IBudgetItem {\n  id: number;\n  name: string;\n  cost: number;\n  freq: string;\n  startDate: string;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAEe,SAAS,WAAW,EAAE,IAAI,EAAE,SAAS,EAAoB;;IACtE,MAAM,EACJ,WAAW,EACX,kBAAkB,EAClB,KAAK,EACL,iBAAiB,EACjB,WAAW,EACZ,GAAG,CAAA,GAAA,2HAAA,CAAA,UAAW,AAAD;IAEd,MAAM,YACJ,AAAC,sBAAsB,CAAC,qBAAsB,QAC1C,MAAM,WAAW,MAAM,GAAG,QAAQ,oBAAoB,MAAM,GAAG,MAC/D;IAEN,qBACE,6LAAC;QACC,WAAW,CAAC;;QAEV,EAAE,mBAAmB,CAAC,EAAE,UAAU;MACpC,CAAC;;0BAED,6LAAC,6IAAA,CAAA,UAAU;0BAAE,CAAA,GAAA,mHAAA,CAAA,aAAU,AAAD,EAAE,KAAK,IAAI;;;;;;0BACjC,6LAAC,2IAAA,CAAA,UAAQ;gBAAC,QAAQ,CAAA,GAAA,mHAAA,CAAA,mBAAgB,AAAD,EAAE,KAAK,IAAI,EAAE,KAAK,IAAI;;;;;;0BACvD,6LAAC,2IAAA,CAAA,UAAQ;gBAAC,WAAW,KAAK,SAAS;;;;;;0BACnC,6LAAC,uIAAA,CAAA,UAAI;gBACH,MAAM,KAAK,IAAI;gBACf,MAAM,KAAK,IAAI;gBACf,SAAS;gBACT,WAAW,YAAY,0BAA0B;;;;;;;;;;;;;IAKvD,eAAe;QACb,IAAI;YACF,MAAM,WAA0B,YAAY,MAAM,CAChD,CAAC,QAAU,MAAM,EAAE,KAAK,KAAK,EAAE;YAEjC,YAAY;gBAAE,aAAa;YAAS;QACtC,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,wCAAwC;QACxD;IACF;IAEA,SAAS;QACP,IAAI,YAAY,EAAE;QAClB,IAAI,SAAS,CAAC,WAAW;YACvB,aAAa,GAAG,KAAK,IAAI,CAAC,SAAS,CAAC;QACtC,OAAO,IAAI,SAAS,WAAW;YAC7B,aAAa,GAAG,KAAK,IAAI,CAAC,0CAA0C,CAAC;QACvE,OAAO,IAAI,CAAC,SAAS,WAAW;YAC9B,aAAa;QACf,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW;YAC/B,aAAa;QACf;QACA,OAAO;IACT;AACF;GAzDwB;;QAOlB,2HAAA,CAAA,UAAW;;;KAPO"}},
    {"offset": {"line": 1097, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1103, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelfrederickson/coding/github/budget-calculator-demo/app/components/FrequencyInput.tsx"],"sourcesContent":["import Button from \"./common/Button\";\n\nexport default function FrequencyInput({\n  selected,\n  className,\n  onClick,\n}: IFrequencyInputProps) {\n  const options = [\"BiWeekly\", \"Monthly\", \"Yearly\"];\n\n  return (\n    <div\n      className={`FREQUENCY-INPUT flex h-full\n        ${selected ? `${selected}-outline` : \"Default-outline\"}\n        ${className}\n      `}\n    >\n      {options.map((option, i) => (\n        <Button\n          key={i}\n          onClick={() => onClick(option)}\n          className={`md:hover:font-bold cursor-pointer\n            ${\n              selected && selected === option\n                ? `${selected}-filled md:w-[7.5rem] flex-grow`\n                : `${selected}-outline md:w-[3.25rem] flex-grow`\n            }\n          `}\n        >\n          {selected && selected === option ? option : option[0]}\n        </Button>\n      ))}\n    </div>\n  );\n}\n\ninterface IFrequencyInputProps {\n  selected: string;\n  className?: string;\n  onClick: (value: string) => void;\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS,eAAe,EACrC,QAAQ,EACR,SAAS,EACT,OAAO,EACc;IACrB,MAAM,UAAU;QAAC;QAAY;QAAW;KAAS;IAEjD,qBACE,6LAAC;QACC,WAAW,CAAC;QACV,EAAE,WAAW,GAAG,SAAS,QAAQ,CAAC,GAAG,kBAAkB;QACvD,EAAE,UAAU;MACd,CAAC;kBAEA,QAAQ,GAAG,CAAC,CAAC,QAAQ,kBACpB,6LAAC,yIAAA,CAAA,UAAM;gBAEL,SAAS,IAAM,QAAQ;gBACvB,WAAW,CAAC;YACV,EACE,YAAY,aAAa,SACrB,GAAG,SAAS,+BAA+B,CAAC,GAC5C,GAAG,SAAS,iCAAiC,CAAC,CACnD;UACH,CAAC;0BAEA,YAAY,aAAa,SAAS,SAAS,MAAM,CAAC,EAAE;eAVhD;;;;;;;;;;AAef;KA/BwB"}},
    {"offset": {"line": 1144, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1150, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelfrederickson/coding/github/budget-calculator-demo/app/components/AddBudgetItemForm.tsx"],"sourcesContent":["import InputField from \"./common/InputField\";\nimport FrequencyInput from \"./FrequencyInput\";\nimport Button from \"./common/Button\";\nimport useAppStore from \"../store/appStore\";\nimport { sortByDay } from \"@/utils/helpers\";\nimport { faBan } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useState } from \"react\";\n\nexport default function AddBudgetItemForm({\n  groupFreq,\n}: {\n  groupFreq?: string;\n}) {\n  const initialFormData: IFormData = {\n    name: \"\",\n    cost: \"\",\n    freq: groupFreq || \"Monthly\",\n    startDate: \"\",\n  };\n\n  const [formData, setFormData] = useState(initialFormData);\n  const { budgetItems, setAppState } = useAppStore();\n\n  return (\n    <form\n      className=\"ADD-BUDGET-ITEM-FORM flex flex-col md:h-14 p-1 gap-[2px] md:gap-3 md:flex-row\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"flex flex-col md:flex-row md:flex-grow gap-[2px] md:gap-0\">\n        <InputField\n          inputName=\"name\"\n          value={formData.name}\n          onChange={handleChange}\n          className={`flex-grow w-full md:w-[9rem]\n            ${formData.freq ? `${formData.freq}-outline` : \"Default-outline\"}\n          `}\n        />\n        <InputField\n          inputName=\"cost\"\n          value={formData.cost}\n          onChange={handleChange}\n          className={`w-full md:w-[9rem]\n            ${formData.freq ? `${formData.freq}-outline` : \"Default-outline\"}\n          `}\n        />\n        <InputField\n          inputName=\"startDate\"\n          value={formData.startDate}\n          maxLength={10}\n          onChange={handleChange}\n          className={`w-full md:w-[9rem]\n            ${formData.freq ? `${formData.freq}-outline` : \"Default-outline\"}\n          `}\n        />\n      </div>\n      {!groupFreq && (\n        <FrequencyInput\n          selected={formData.freq}\n          onClick={handleOptionClick}\n          className=\"hidden md:flex\"\n        />\n      )}\n      <div className=\"flex gap-1 h-[50px] justify-center\">\n        {!groupFreq && (\n          <FrequencyInput\n            selected={formData.freq}\n            onClick={handleOptionClick}\n            className=\"md:hidden flex flex-grow\"\n          />\n        )}\n        <Button\n          className={`w-[52px] font-arial font-bold text-[2rem] active:bg-white active:border-white ${formData.freq}-hover\n          ${formData.freq ? `${formData.freq}-outline` : \"Default-outline\"}\n        `}\n          type=\"submit\"\n        >\n          +\n        </Button>\n        <Button\n          onClick={() => setAppState({ addingBudgetItem: \"\" })}\n          className={`w-[52px] font-arial font-bold ${formData.freq}-hover md:hover:text-black active:bg-white active:border-white active:text-black ${formData.freq}-outline`}\n        >\n          <FontAwesomeIcon icon={faBan} />\n        </Button>\n      </div>\n    </form>\n  );\n\n  async function addItem(formData: IFormData) {\n    const entries = Object.values(formData);\n    for (const entry of entries) {\n      if (entry === \"\") {\n        alert(\"Fill out all the fields, idiot.\");\n        return;\n      }\n    }\n    try {\n      const formattedItem = {\n        id: budgetItems.length + 1,\n        ...formData,\n        cost: Number(formData.cost),\n        startDate: convertToUtcISO(formData.startDate),\n      };\n      setAppState({ budgetItems: sortByDay([...budgetItems, formattedItem]) });\n    } catch (err) {\n      console.error(\"Failed to add budget item:\", err);\n    }\n  }\n\n  async function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    await addItem(formData);\n    setFormData(initialFormData);\n  }\n\n  function handleOptionClick(freq: string) {\n    setFormData((formData) => ({\n      ...formData,\n      freq,\n    }));\n  }\n\n  function formatCurrency(value: string) {\n    if (value === \"\") return \"0.00\";\n\n    const numericValue = value.replace(/\\D/g, \"\");\n    const paddedValue = numericValue.padStart(3, \"0\");\n    const dollars = paddedValue.slice(0, -2);\n    const cents = paddedValue.slice(-2);\n    return `${Number(dollars)}.${cents}`;\n  }\n\n  function formatDateInput(value: string) {\n    let newValue = value.replace(/\\D/g, \"\");\n\n    if (newValue.length >= 5) {\n      newValue = `${newValue.slice(0, 2)}/${newValue.slice(\n        2,\n        4\n      )}/${newValue.slice(4)}`;\n    } else if (newValue.length < 5 && newValue.length > 2) {\n      newValue = `${newValue.slice(0, 2)}/${newValue.slice(2)}`;\n    }\n\n    return newValue;\n  }\n\n  function handleChange(inputName: string, value: string) {\n    let newValue = value;\n\n    if (inputName === \"cost\") newValue = formatCurrency(value);\n    if (inputName === \"startDate\") newValue = formatDateInput(value);\n\n    setFormData((formData) => ({\n      ...formData,\n      [inputName]: newValue,\n    }));\n  }\n\n  function convertToUtcISO(date: string): string {\n    const [month, day, year] = date.split(\"/\");\n    return `${year}-${month}-${day}T12:00:00.000Z`;\n  }\n}\n\ninterface IFormData {\n  name: string;\n  cost: string;\n  freq: string;\n  startDate: string;\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1372, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1378, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelfrederickson/coding/github/budget-calculator-demo/app/components/BudgetItemMobile.tsx"],"sourcesContent":["import Typography from \"./common/Typography\";\nimport CostInfo from \"./common/CostInfo\";\nimport Chip from \"./common/Chip\";\nimport {\n  calculateMonthly,\n  capitalize,\n  getNextPaymentDateUS,\n} from \"@/utils/helpers\";\nimport useAppStore from \"../store/appStore\";\n\nexport default function BudgetItemMobile({\n  item,\n  className,\n}: IBudgetItemProps) {\n  const {\n    budgetItems,\n    nearestPaymentDate,\n    split,\n    budgetItemsSorted,\n    setAppState,\n  } = useAppStore();\n\n  const highlight =\n    (nearestPaymentDate && !budgetItemsSorted) || split\n      ? item?.startDate?.slice(8, 10) === nearestPaymentDate?.slice(8, 10)\n      : false;\n\n  return (\n    <div\n      className={`\n        BUDGET-ITEM-MOBILE flex justify-between items-center p-2 border text-[1.2rem]\n        ${determineStyling()} ${className}\n      `}\n    >\n      <div className=\"flex flex-col\">\n        <Typography className=\"leading-tight\">\n          {capitalize(item.name)}\n        </Typography>\n        <Typography className=\"leading-none text-[.9rem] opacity-80\">\n          {getNextPaymentDateUS(item.startDate)}\n        </Typography>\n      </div>\n\n      <div className=\"flex items-center gap-3\">\n        <CostInfo amount={calculateMonthly(item.cost, item.freq)} />\n        <Chip\n          freq={item.freq}\n          cost={item.cost}\n          onClick={deleteItem}\n          className={highlight ? \"outline outline-black\" : \"\"}\n        />\n      </div>\n    </div>\n  );\n\n  async function deleteItem(): Promise<void> {\n    try {\n      const filtered: IBudgetItem[] = budgetItems.filter(\n        (bItem) => bItem.id !== item.id\n      );\n      setAppState({ budgetItems: filtered });\n    } catch (err) {\n      console.error(\"ERROR: Failed to delete budget item:\", err);\n    }\n  }\n\n  function determineStyling(): string {\n    let className = ``;\n    if (split && !highlight) {\n      className += `${item.freq}-outline `;\n    } else if (split && highlight) {\n      className += `${item.freq}-filled font-bold !border-2 !border-black `;\n    } else if (!split && highlight) {\n      className += \"Default-filled font-bold !border-2 !border-black \";\n    } else if (!split && !highlight) {\n      className += \"Default-outline \";\n    }\n    return className;\n  }\n}\n\ninterface IBudgetItemProps {\n  item: IBudgetItem;\n  className?: string;\n  groupFreq?: string;\n}\n\ninterface IBudgetItem {\n  id: number;\n  name: string;\n  cost: number;\n  freq: string;\n  startDate: string;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AAKA;;;;;;;;AAEe,SAAS,iBAAiB,EACvC,IAAI,EACJ,SAAS,EACQ;;IACjB,MAAM,EACJ,WAAW,EACX,kBAAkB,EAClB,KAAK,EACL,iBAAiB,EACjB,WAAW,EACZ,GAAG,CAAA,GAAA,2HAAA,CAAA,UAAW,AAAD;IAEd,MAAM,YACJ,AAAC,sBAAsB,CAAC,qBAAsB,QAC1C,MAAM,WAAW,MAAM,GAAG,QAAQ,oBAAoB,MAAM,GAAG,MAC/D;IAEN,qBACE,6LAAC;QACC,WAAW,CAAC;;QAEV,EAAE,mBAAmB,CAAC,EAAE,UAAU;MACpC,CAAC;;0BAED,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,6IAAA,CAAA,UAAU;wBAAC,WAAU;kCACnB,CAAA,GAAA,mHAAA,CAAA,aAAU,AAAD,EAAE,KAAK,IAAI;;;;;;kCAEvB,6LAAC,6IAAA,CAAA,UAAU;wBAAC,WAAU;kCACnB,CAAA,GAAA,mHAAA,CAAA,uBAAoB,AAAD,EAAE,KAAK,SAAS;;;;;;;;;;;;0BAIxC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,2IAAA,CAAA,UAAQ;wBAAC,QAAQ,CAAA,GAAA,mHAAA,CAAA,mBAAgB,AAAD,EAAE,KAAK,IAAI,EAAE,KAAK,IAAI;;;;;;kCACvD,6LAAC,uIAAA,CAAA,UAAI;wBACH,MAAM,KAAK,IAAI;wBACf,MAAM,KAAK,IAAI;wBACf,SAAS;wBACT,WAAW,YAAY,0BAA0B;;;;;;;;;;;;;;;;;;;IAMzD,eAAe;QACb,IAAI;YACF,MAAM,WAA0B,YAAY,MAAM,CAChD,CAAC,QAAU,MAAM,EAAE,KAAK,KAAK,EAAE;YAEjC,YAAY;gBAAE,aAAa;YAAS;QACtC,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,wCAAwC;QACxD;IACF;IAEA,SAAS;QACP,IAAI,YAAY,EAAE;QAClB,IAAI,SAAS,CAAC,WAAW;YACvB,aAAa,GAAG,KAAK,IAAI,CAAC,SAAS,CAAC;QACtC,OAAO,IAAI,SAAS,WAAW;YAC7B,aAAa,GAAG,KAAK,IAAI,CAAC,0CAA0C,CAAC;QACvE,OAAO,IAAI,CAAC,SAAS,WAAW;YAC9B,aAAa;QACf,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW;YAC/B,aAAa;QACf;QACA,OAAO;IACT;AACF;GArEwB;;QAUlB,2HAAA,CAAA,UAAW;;;KAVO"}},
    {"offset": {"line": 1497, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1503, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelfrederickson/coding/github/budget-calculator-demo/app/components/BudgetItemList.tsx"],"sourcesContent":["import BudgetItem from \"./BudgetItem\";\nimport PanelHeader from \"./common/PanelHeader\";\nimport { useState } from \"react\";\nimport { sortByFullDate, sortByDay } from \"@/utils/helpers\";\nimport useAppStore from \"../store/appStore\";\nimport AddBudgetItemForm from \"./AddBudgetItemForm\";\nimport BudgetItemMobile from \"./BudgetItemMobile\";\n\nexport default function BudgetItemList({\n  items,\n  groupFreq,\n}: IBudgetItemListProps) {\n  const [collapsed, setCollapsed] = useState(false);\n  const { addingBudgetItem, budgetItemsSorted, setAppState } = useAppStore();\n\n  const sortedItems = budgetItemsSorted\n    ? sortByFullDate(items)\n    : sortByDay(items);\n\n  return (\n    <div\n      className={`BUDGET-ITEM-LIST flex flex-col border\n        ${groupFreq ? `${groupFreq}-outline` : \"Default-outline\"}\n      `}\n    >\n      <PanelHeader\n        defaultText={groupFreq || \"Monthly Costs\"}\n        collapsed={collapsed}\n        groupFreq={groupFreq}\n        setCollapsed={setCollapsed}\n        onButtonClick={() => setAppState({ addingBudgetItem: groupFreq })}\n      />\n\n      {/* Desktop */}\n      <div className={`${collapsed ? \"md:hidden\" : \"\"} md:block hidden`}>\n        {addingBudgetItem === groupFreq && (\n          <AddBudgetItemForm groupFreq={groupFreq} />\n        )}\n        {items.length > 0 &&\n          sortedItems.map((item, i) => <BudgetItem key={i} item={item} />)}\n      </div>\n\n      {/* Mobile */}\n      <div className={`${collapsed ? \"hidden\" : \"\"} md:hidden block`}>\n        {addingBudgetItem === groupFreq && (\n          <AddBudgetItemForm groupFreq={groupFreq} />\n        )}\n        {items.length > 0 &&\n          sortedItems.map((item, i) => (\n            <BudgetItemMobile key={i} item={item} />\n          ))}\n      </div>\n    </div>\n  );\n}\n\ninterface IBudgetItem {\n  id: number;\n  name: string;\n  cost: number;\n  freq: string;\n  startDate: string;\n}\n\ninterface IBudgetItemListProps {\n  items: IBudgetItem[];\n  groupFreq?: \"Default\" | \"BiWeekly\" | \"Monthly\" | \"Yearly\";\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAEe,SAAS,eAAe,EACrC,KAAK,EACL,SAAS,EACY;;IACrB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,2HAAA,CAAA,UAAW,AAAD;IAEvE,MAAM,cAAc,oBAChB,CAAA,GAAA,mHAAA,CAAA,iBAAc,AAAD,EAAE,SACf,CAAA,GAAA,mHAAA,CAAA,YAAS,AAAD,EAAE;IAEd,qBACE,6LAAC;QACC,WAAW,CAAC;QACV,EAAE,YAAY,GAAG,UAAU,QAAQ,CAAC,GAAG,kBAAkB;MAC3D,CAAC;;0BAED,6LAAC,8IAAA,CAAA,UAAW;gBACV,aAAa,aAAa;gBAC1B,WAAW;gBACX,WAAW;gBACX,cAAc;gBACd,eAAe,IAAM,YAAY;wBAAE,kBAAkB;oBAAU;;;;;;0BAIjE,6LAAC;gBAAI,WAAW,GAAG,YAAY,cAAc,GAAG,gBAAgB,CAAC;;oBAC9D,qBAAqB,2BACpB,6LAAC,0IAAA,CAAA,UAAiB;wBAAC,WAAW;;;;;;oBAE/B,MAAM,MAAM,GAAG,KACd,YAAY,GAAG,CAAC,CAAC,MAAM,kBAAM,6LAAC,mIAAA,CAAA,UAAU;4BAAS,MAAM;2BAAT;;;;;;;;;;;0BAIlD,6LAAC;gBAAI,WAAW,GAAG,YAAY,WAAW,GAAG,gBAAgB,CAAC;;oBAC3D,qBAAqB,2BACpB,6LAAC,0IAAA,CAAA,UAAiB;wBAAC,WAAW;;;;;;oBAE/B,MAAM,MAAM,GAAG,KACd,YAAY,GAAG,CAAC,CAAC,MAAM,kBACrB,6LAAC,yIAAA,CAAA,UAAgB;4BAAS,MAAM;2BAAT;;;;;;;;;;;;;;;;;AAKnC;GA9CwB;;QAKuC,2HAAA,CAAA,UAAW;;;KALlD"}},
    {"offset": {"line": 1610, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1616, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelfrederickson/coding/github/budget-calculator-demo/app/components/SplitBudgetItemList.tsx"],"sourcesContent":["import BudgetItemList from \"./BudgetItemList\";\nimport { sortByFullDate } from \"@/utils/helpers\";\n\nexport default function SplitBudgetItemList({\n  items,\n}: {\n  items: IBudgetItem[];\n}) {\n  const { BiWeekly, Monthly, Yearly } = groupBudgetItems(items);\n\n  return (\n    <div className=\"GROUPED-BUDGET-ITEM-LIST flex flex-col gap-4\">\n      <BudgetItemList items={sortByFullDate(BiWeekly)} groupFreq={\"BiWeekly\"} />\n      <BudgetItemList items={sortByFullDate(Monthly)} groupFreq={\"Monthly\"} />\n      <BudgetItemList items={sortByFullDate(Yearly)} groupFreq={\"Yearly\"} />\n    </div>\n  );\n\n  function groupBudgetItems(budgetItems: IBudgetItem[]) {\n    const groupedItems: IGroupedBudgetItems = {\n      BiWeekly: [],\n      Monthly: [],\n      Yearly: [],\n    };\n\n    for (const item of budgetItems) {\n      groupedItems[item.freq].push(item);\n    }\n    return groupedItems;\n  }\n}\n\ninterface IBudgetItem {\n  id: number;\n  name: string;\n  cost: number;\n  freq: string;\n  startDate: string;\n}\n\ninterface IGroupedBudgetItems {\n  BiWeekly: IBudgetItem[];\n  Monthly: IBudgetItem[];\n  Yearly: IBudgetItem[];\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS,oBAAoB,EAC1C,KAAK,EAGN;IACC,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,iBAAiB;IAEvD,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,uIAAA,CAAA,UAAc;gBAAC,OAAO,CAAA,GAAA,mHAAA,CAAA,iBAAc,AAAD,EAAE;gBAAW,WAAW;;;;;;0BAC5D,6LAAC,uIAAA,CAAA,UAAc;gBAAC,OAAO,CAAA,GAAA,mHAAA,CAAA,iBAAc,AAAD,EAAE;gBAAU,WAAW;;;;;;0BAC3D,6LAAC,uIAAA,CAAA,UAAc;gBAAC,OAAO,CAAA,GAAA,mHAAA,CAAA,iBAAc,AAAD,EAAE;gBAAS,WAAW;;;;;;;;;;;;;IAI9D,SAAS,iBAAiB,WAA0B;QAClD,MAAM,eAAoC;YACxC,UAAU,EAAE;YACZ,SAAS,EAAE;YACX,QAAQ,EAAE;QACZ;QAEA,KAAK,MAAM,QAAQ,YAAa;YAC9B,YAAY,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC;QAC/B;QACA,OAAO;IACT;AACF;KA3BwB"}},
    {"offset": {"line": 1679, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1685, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelfrederickson/coding/github/budget-calculator-demo/app/components/Switch.tsx"],"sourcesContent":["import Typography from \"./common/Typography\";\nimport Button from \"./common/Button\";\nimport useAppStore from \"../store/appStore\";\n\nexport default function Switch({\n  label,\n  buttonLabels = [],\n  state,\n}: ISwitchProps) {\n  const app = useAppStore();\n  const appStoreSetting = app[state];\n  const headerStyle =\n    \"Default-filled flex text-center text-[.8rem] md:text-[.9rem] leading-tight font-semibold w-[65px] h-full h-10 md:h-auto md:w-auto items-center justify-center\";\n\n  return (\n    <div className=\"SWITCH relative flex justify-around md:flex-col\">\n      <div className=\"border border-green-300 flex items-center md:block\">\n        <div className={headerStyle}>\n          <Typography className=\"leading-none\">{label}</Typography>\n        </div>\n        <div className=\"flex h-full md:h-auto\">\n          <Button\n            onClick={() => app.setAppState({ [state]: false })}\n            className={`flex flex-grow justify-center items-center md:hover:font-semibold w-[50px] md:w-[125px] ${\n              appStoreSetting\n                ? \"Default-outline !border-none\"\n                : \"Default-filled !border-black\"\n            }`}\n          >\n            <Typography>{buttonLabels[0]}</Typography>\n          </Button>\n          <Button\n            onClick={() => app.setAppState({ [state]: true })}\n            className={`flex flex-grow justify-center items-center md:hover:font-semibold w-[50px] md:w-[125px] ${\n              appStoreSetting\n                ? \"Default-filled !border-black\"\n                : \"Default-outline !border-none\"\n            }`}\n          >\n            <Typography>{buttonLabels[1]}</Typography>\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\ninterface ISwitchProps {\n  label: string;\n  buttonLabels: string[];\n  state: string;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;;AAEe,SAAS,OAAO,EAC7B,KAAK,EACL,eAAe,EAAE,EACjB,KAAK,EACQ;;IACb,MAAM,MAAM,CAAA,GAAA,2HAAA,CAAA,UAAW,AAAD;IACtB,MAAM,kBAAkB,GAAG,CAAC,MAAM;IAClC,MAAM,cACJ;IAEF,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAW;8BACd,cAAA,6LAAC,6IAAA,CAAA,UAAU;wBAAC,WAAU;kCAAgB;;;;;;;;;;;8BAExC,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,yIAAA,CAAA,UAAM;4BACL,SAAS,IAAM,IAAI,WAAW,CAAC;oCAAE,CAAC,MAAM,EAAE;gCAAM;4BAChD,WAAW,CAAC,wFAAwF,EAClG,kBACI,iCACA,gCACJ;sCAEF,cAAA,6LAAC,6IAAA,CAAA,UAAU;0CAAE,YAAY,CAAC,EAAE;;;;;;;;;;;sCAE9B,6LAAC,yIAAA,CAAA,UAAM;4BACL,SAAS,IAAM,IAAI,WAAW,CAAC;oCAAE,CAAC,MAAM,EAAE;gCAAK;4BAC/C,WAAW,CAAC,wFAAwF,EAClG,kBACI,iCACA,gCACJ;sCAEF,cAAA,6LAAC,6IAAA,CAAA,UAAU;0CAAE,YAAY,CAAC,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMxC;GAzCwB;;QAKV,2HAAA,CAAA,UAAW;;;KALD"}},
    {"offset": {"line": 1788, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1794, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelfrederickson/coding/github/budget-calculator-demo/app/components/Controls.tsx"],"sourcesContent":["import Switch from \"./Switch\";\n\nexport default function Controls() {\n  return (\n    <div className=\"CONTROLS flex gap-2\">\n      <Switch label=\"Merge\" buttonLabels={[\"On\", \"Off\"]} state={\"split\"} />\n      <Switch\n        label=\"Sort By Day\"\n        buttonLabels={[\"On\", \"Off\"]}\n        state={\"budgetItemsSorted\"}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,+HAAA,CAAA,UAAM;gBAAC,OAAM;gBAAQ,cAAc;oBAAC;oBAAM;iBAAM;gBAAE,OAAO;;;;;;0BAC1D,6LAAC,+HAAA,CAAA,UAAM;gBACL,OAAM;gBACN,cAAc;oBAAC;oBAAM;iBAAM;gBAC3B,OAAO;;;;;;;;;;;;AAIf;KAXwB"}},
    {"offset": {"line": 1842, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1848, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelfrederickson/coding/github/budget-calculator-demo/app/components/BudgetItemPanel.tsx"],"sourcesContent":["import useAppStore from \"../store/appStore\";\nimport BudgetItemList from \"./BudgetItemList\";\nimport SplitBudgetItemList from \"./SplitBudgetItemList\";\nimport Controls from \"./Controls\";\n\nexport default function BudgetItemPanel({\n  budgetItems,\n}: IBudgetItemPanelProps) {\n  const { split } = useAppStore();\n\n  return (\n    <div className=\"BUDGET-ITEM-PANEL flex flex-col gap-2\">\n      <Controls />\n      {split ? (\n        <SplitBudgetItemList items={budgetItems} />\n      ) : (\n        <BudgetItemList items={budgetItems} />\n      )}\n    </div>\n  );\n}\n\ninterface IBudgetItemPanelProps {\n  budgetItems: IBudgetItem[];\n}\n\ninterface IBudgetItem {\n  id: number;\n  name: string;\n  cost: number;\n  freq: string;\n  startDate: string;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;;AAEe,SAAS,gBAAgB,EACtC,WAAW,EACW;;IACtB,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,2HAAA,CAAA,UAAW,AAAD;IAE5B,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,iIAAA,CAAA,UAAQ;;;;;YACR,sBACC,6LAAC,4IAAA,CAAA,UAAmB;gBAAC,OAAO;;;;;qCAE5B,6LAAC,uIAAA,CAAA,UAAc;gBAAC,OAAO;;;;;;;;;;;;AAI/B;GAfwB;;QAGJ,2HAAA,CAAA,UAAW;;;KAHP"}},
    {"offset": {"line": 1904, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1910, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelfrederickson/coding/github/budget-calculator-demo/app/components/AddDebtItemForm.tsx"],"sourcesContent":["import InputField from \"./common/InputField\";\nimport Button from \"./common/Button\";\nimport useAppStore from \"../store/appStore\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBan } from \"@fortawesome/free-solid-svg-icons\";\nimport { useState, useEffect, useRef } from \"react\";\n\nexport default function AddDebtItemForm() {\n  const initialFormData = {\n    name: \"\",\n    amount: \"\",\n  };\n  const [formData, setFormData] = useState(initialFormData);\n  const { debtItems, setAppState } = useAppStore();\n\n  const inputRef = useRef<HTMLInputElement>(null);\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n\n  return (\n    <form\n      className=\"ADD-DEBT-ITEM-FORM flex items-center gap-[1px] py-1\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"flex flex-wrap flex-grow h-[90%] px-1\">\n        <InputField\n          inputName=\"name\"\n          value={formData.name}\n          onChange={handleChange}\n          inputRef={inputRef}\n          className=\"w-full flex-grow mb-1 md:w-[10rem] md:mb-0\"\n        />\n        <InputField\n          inputName=\"amount\"\n          value={formData.amount}\n          onChange={handleChange}\n          className=\"w-[6rem] flex-grow md:flex-initial md:w-[10rem]\"\n        />\n        <Button\n          className={`w-[52px] font-arial font-bold md:hover:bg-green-300 md:hover:border-green-300 md:hover:text-black active:bg-white active:border-white ml-1 active:text-black Default-outline text-[2rem]`}\n          type=\"submit\"\n        >\n          +\n        </Button>\n        <Button\n          onClick={() => setAppState({ addingDebtItem: false })}\n          className={`text-[2rem] w-[52px] font-arial font-bold md:hover:bg-green-300 md:hover:border-green-300 md:hover:text-black active:bg-white active:border-white ml-1 active:text-black Default-outline`}\n        >\n          <FontAwesomeIcon icon={faBan} />\n        </Button>\n      </div>\n    </form>\n  );\n\n  function addDebtItem(newItem: IFormData) {\n    const entries = Object.values(newItem);\n    for (const entry of entries) {\n      if (entry === \"\") {\n        alert(\"Fill out all the fields, idiot.\");\n        return;\n      }\n    }\n    try {\n      const newItemFormatted = {\n        id: debtItems.length + 1,\n        ...newItem,\n        amount: Number(newItem.amount),\n      };\n      setAppState({ debtItems: [...debtItems, newItemFormatted] });\n    } catch (err) {\n      console.error(\"Failed to add debt item:\", err);\n    }\n  }\n\n  function handleSubmit(e: React.FormEvent) {\n    e.preventDefault();\n    addDebtItem(formData);\n    setFormData(initialFormData);\n    if (inputRef.current) inputRef.current.focus();\n  }\n\n  function formatCurrency(value: string) {\n    if (value === \"\") return \"0.00\";\n\n    const numericValue = value.replace(/\\D/g, \"\");\n    const paddedValue = numericValue.padStart(3, \"0\");\n    const dollars = paddedValue.slice(0, -2);\n    const cents = paddedValue.slice(-2);\n    return `${Number(dollars)}.${cents}`;\n  }\n\n  function handleChange(inputName: string, value: string) {\n    let newValue = value;\n\n    if (inputName === \"amount\") newValue = formatCurrency(value);\n\n    setFormData((formData) => ({\n      ...formData,\n      [inputName]: newValue,\n    }));\n  }\n}\n\ninterface IFormData {\n  name: string;\n  amount: string;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AAEA;AADA;;;;;;;;;AAGe,SAAS;;IACtB,MAAM,kBAAkB;QACtB,MAAM;QACN,QAAQ;IACV;IACA,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,2HAAA,CAAA,UAAW,AAAD;IAE7C,MAAM,WAAW,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAoB;IAC1C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,IAAI,SAAS,OAAO,EAAE;gBACpB,SAAS,OAAO,CAAC,KAAK;YACxB;QACF;oCAAG,EAAE;IAEL,qBACE,6LAAC;QACC,WAAU;QACV,UAAU;kBAEV,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC,6IAAA,CAAA,UAAU;oBACT,WAAU;oBACV,OAAO,SAAS,IAAI;oBACpB,UAAU;oBACV,UAAU;oBACV,WAAU;;;;;;8BAEZ,6LAAC,6IAAA,CAAA,UAAU;oBACT,WAAU;oBACV,OAAO,SAAS,MAAM;oBACtB,UAAU;oBACV,WAAU;;;;;;8BAEZ,6LAAC,yIAAA,CAAA,UAAM;oBACL,WAAW,CAAC,wLAAwL,CAAC;oBACrM,MAAK;8BACN;;;;;;8BAGD,6LAAC,yIAAA,CAAA,UAAM;oBACL,SAAS,IAAM,YAAY;4BAAE,gBAAgB;wBAAM;oBACnD,WAAW,CAAC,wLAAwL,CAAC;8BAErM,cAAA,6LAAC,uKAAA,CAAA,kBAAe;wBAAC,MAAM,2KAAA,CAAA,QAAK;;;;;;;;;;;;;;;;;;;;;;;IAMpC,SAAS,YAAY,OAAkB;QACrC,MAAM,UAAU,OAAO,MAAM,CAAC;QAC9B,KAAK,MAAM,SAAS,QAAS;YAC3B,IAAI,UAAU,IAAI;gBAChB,MAAM;gBACN;YACF;QACF;QACA,IAAI;YACF,MAAM,mBAAmB;gBACvB,IAAI,UAAU,MAAM,GAAG;gBACvB,GAAG,OAAO;gBACV,QAAQ,OAAO,QAAQ,MAAM;YAC/B;YACA,YAAY;gBAAE,WAAW;uBAAI;oBAAW;iBAAiB;YAAC;QAC5D,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,4BAA4B;QAC5C;IACF;IAEA,SAAS,aAAa,CAAkB;QACtC,EAAE,cAAc;QAChB,YAAY;QACZ,YAAY;QACZ,IAAI,SAAS,OAAO,EAAE,SAAS,OAAO,CAAC,KAAK;IAC9C;IAEA,SAAS,eAAe,KAAa;QACnC,IAAI,UAAU,IAAI,OAAO;QAEzB,MAAM,eAAe,MAAM,OAAO,CAAC,OAAO;QAC1C,MAAM,cAAc,aAAa,QAAQ,CAAC,GAAG;QAC7C,MAAM,UAAU,YAAY,KAAK,CAAC,GAAG,CAAC;QACtC,MAAM,QAAQ,YAAY,KAAK,CAAC,CAAC;QACjC,OAAO,GAAG,OAAO,SAAS,CAAC,EAAE,OAAO;IACtC;IAEA,SAAS,aAAa,SAAiB,EAAE,KAAa;QACpD,IAAI,WAAW;QAEf,IAAI,cAAc,UAAU,WAAW,eAAe;QAEtD,YAAY,CAAC,WAAa,CAAC;gBACzB,GAAG,QAAQ;gBACX,CAAC,UAAU,EAAE;YACf,CAAC;IACH;AACF;GAjGwB;;QAMa,2HAAA,CAAA,UAAW;;;KANxB"}},
    {"offset": {"line": 2067, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2073, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelfrederickson/coding/github/budget-calculator-demo/app/components/EditDebtItemForm.tsx"],"sourcesContent":["import InputField from \"./common/InputField\";\nimport Button from \"./common/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFloppyDisk } from \"@fortawesome/free-regular-svg-icons\";\nimport { faBan } from \"@fortawesome/free-solid-svg-icons\";\nimport { useState, useEffect, useRef } from \"react\";\nimport useAppStore from \"../store/appStore\";\n\nexport default function EditDebtItemForm({\n  item,\n  setEditingDebtItem,\n}: IEditDebtItemFormProps) {\n  const initialFormData: IFormData = {\n    name: item.name,\n    amount: item.amount.toFixed(2),\n  };\n\n  const [formData, setFormData] = useState(initialFormData);\n  const { debtItems, setAppState } = useAppStore();\n\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n\n  return (\n    <form\n      className=\"EDIT-DEBT-ITEM-FORM flex items-center gap-[1px]\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"flex flex-grow flex-wrap h-[90%] p-1\">\n        <InputField\n          inputName=\"name\"\n          value={formData.name}\n          onChange={handleChange}\n          inputRef={inputRef}\n          className=\"w-full flex-grow mb-1 md:w-[10rem] md:mb-0\"\n        />\n        <InputField\n          inputName=\"amount\"\n          value={formData.amount}\n          onChange={handleChange}\n          className=\"w-[6rem] flex-grow md:flex-initial md:w-[10rem]\"\n        />\n        <Button\n          className={`text-[2rem] w-[52px] font-arial font-bold md:hover:bg-green-300 md:hover:border-green-300 md:hover:text-black active:bg-white active:border-white ml-1 active:text-black Default-outline`}\n          type=\"submit\"\n        >\n          <FontAwesomeIcon icon={faFloppyDisk} />\n        </Button>\n        <Button\n          onClick={() => setEditingDebtItem(false)}\n          className={`text-[2rem] w-[52px] font-arial font-bold md:hover:bg-green-300 md:hover:border-green-300 md:hover:text-black active:bg-white active:border-white ml-1 active:text-black Default-outline`}\n        >\n          <FontAwesomeIcon icon={faBan} />\n        </Button>\n      </div>\n    </form>\n  );\n\n  function editDebtItem(formData: IFormData) {\n    const entries = Object.values(formData);\n    for (const entry of entries) {\n      if (entry === \"\") {\n        alert(\"Fill out all the fields, idiot.\");\n        return;\n      }\n    }\n    try {\n      const updatedDebtItem = {\n        id: item.id,\n        name: formData.name,\n        amount: Number(formData.amount),\n      };\n\n      const newDebtItems = debtItems.map((dItem) =>\n        dItem.id === updatedDebtItem.id ? updatedDebtItem : dItem\n      );\n      setAppState({ debtItems: newDebtItems });\n    } catch (err) {\n      console.error(\"Failed to edit debt item:\", err);\n    }\n  }\n\n  function handleSubmit(e: React.FormEvent) {\n    e.preventDefault();\n    editDebtItem(formData);\n    setFormData(initialFormData);\n    setEditingDebtItem(false);\n  }\n\n  function formatCurrency(value: string) {\n    if (value === \"\") return \"0.00\";\n\n    const numericValue = value.replace(/\\D/g, \"\");\n    const paddedValue = numericValue.padStart(3, \"0\");\n    const dollars = paddedValue.slice(0, -2);\n    const cents = paddedValue.slice(-2);\n    return `${Number(dollars)}.${cents}`;\n  }\n\n  function handleChange(inputName: string, value: string) {\n    let newValue = value;\n\n    if (inputName === \"amount\") newValue = formatCurrency(value);\n\n    setFormData((formData) => ({\n      ...formData,\n      [inputName]: newValue,\n    }));\n  }\n}\n\ninterface IEditDebtItemFormProps {\n  item: IDebtItem;\n  setEditingDebtItem: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\ninterface IFormData {\n  name: string;\n  amount: string;\n}\n\ninterface IDebtItem {\n  id: number;\n  name: string;\n  amount: number;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAGA;AACA;AAHA;AACA;;;;;;;;;;AAIe,SAAS,iBAAiB,EACvC,IAAI,EACJ,kBAAkB,EACK;;IACvB,MAAM,kBAA6B;QACjC,MAAM,KAAK,IAAI;QACf,QAAQ,KAAK,MAAM,CAAC,OAAO,CAAC;IAC9B;IAEA,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,2HAAA,CAAA,UAAW,AAAD;IAE7C,MAAM,WAAW,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAoB;IAE1C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACR,IAAI,SAAS,OAAO,EAAE;gBACpB,SAAS,OAAO,CAAC,KAAK;YACxB;QACF;qCAAG,EAAE;IAEL,qBACE,6LAAC;QACC,WAAU;QACV,UAAU;kBAEV,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC,6IAAA,CAAA,UAAU;oBACT,WAAU;oBACV,OAAO,SAAS,IAAI;oBACpB,UAAU;oBACV,UAAU;oBACV,WAAU;;;;;;8BAEZ,6LAAC,6IAAA,CAAA,UAAU;oBACT,WAAU;oBACV,OAAO,SAAS,MAAM;oBACtB,UAAU;oBACV,WAAU;;;;;;8BAEZ,6LAAC,yIAAA,CAAA,UAAM;oBACL,WAAW,CAAC,wLAAwL,CAAC;oBACrM,MAAK;8BAEL,cAAA,6LAAC,uKAAA,CAAA,kBAAe;wBAAC,MAAM,6KAAA,CAAA,eAAY;;;;;;;;;;;8BAErC,6LAAC,yIAAA,CAAA,UAAM;oBACL,SAAS,IAAM,mBAAmB;oBAClC,WAAW,CAAC,wLAAwL,CAAC;8BAErM,cAAA,6LAAC,uKAAA,CAAA,kBAAe;wBAAC,MAAM,2KAAA,CAAA,QAAK;;;;;;;;;;;;;;;;;;;;;;;IAMpC,SAAS,aAAa,QAAmB;QACvC,MAAM,UAAU,OAAO,MAAM,CAAC;QAC9B,KAAK,MAAM,SAAS,QAAS;YAC3B,IAAI,UAAU,IAAI;gBAChB,MAAM;gBACN;YACF;QACF;QACA,IAAI;YACF,MAAM,kBAAkB;gBACtB,IAAI,KAAK,EAAE;gBACX,MAAM,SAAS,IAAI;gBACnB,QAAQ,OAAO,SAAS,MAAM;YAChC;YAEA,MAAM,eAAe,UAAU,GAAG,CAAC,CAAC,QAClC,MAAM,EAAE,KAAK,gBAAgB,EAAE,GAAG,kBAAkB;YAEtD,YAAY;gBAAE,WAAW;YAAa;QACxC,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,6BAA6B;QAC7C;IACF;IAEA,SAAS,aAAa,CAAkB;QACtC,EAAE,cAAc;QAChB,aAAa;QACb,YAAY;QACZ,mBAAmB;IACrB;IAEA,SAAS,eAAe,KAAa;QACnC,IAAI,UAAU,IAAI,OAAO;QAEzB,MAAM,eAAe,MAAM,OAAO,CAAC,OAAO;QAC1C,MAAM,cAAc,aAAa,QAAQ,CAAC,GAAG;QAC7C,MAAM,UAAU,YAAY,KAAK,CAAC,GAAG,CAAC;QACtC,MAAM,QAAQ,YAAY,KAAK,CAAC,CAAC;QACjC,OAAO,GAAG,OAAO,SAAS,CAAC,EAAE,OAAO;IACtC;IAEA,SAAS,aAAa,SAAiB,EAAE,KAAa;QACpD,IAAI,WAAW;QAEf,IAAI,cAAc,UAAU,WAAW,eAAe;QAEtD,YAAY,CAAC,WAAa,CAAC;gBACzB,GAAG,QAAQ;gBACX,CAAC,UAAU,EAAE;YACf,CAAC;IACH;AACF;GA1GwB;;QAUa,2HAAA,CAAA,UAAW;;;KAVxB"}},
    {"offset": {"line": 2234, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2240, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelfrederickson/coding/github/budget-calculator-demo/app/components/DebtItem.tsx"],"sourcesContent":["import Typography from \"./common/Typography\";\nimport Button from \"./common/Button\";\nimport EditDebtItemForm from \"./EditDebtItemForm\";\nimport { capitalize } from \"@/utils/helpers\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPenToSquare, faTrashCan } from \"@fortawesome/free-regular-svg-icons\";\nimport { useState } from \"react\";\nimport useAppStore from \"../store/appStore\";\n\nexport default function DebtItem({ item, className }: IDebtItemProps) {\n  const [editingDebtItem, setEditingDebtItem] = useState(false);\n  const { debtItems, setAppState } = useAppStore();\n\n  return !editingDebtItem ? (\n    <div\n      className={`\n      DEBT-ITEM flex items-center justify-between p-2 border Default-outline text-[1.2rem] md:text-[1.4rem] ${className}\n    `}\n    >\n      {/* Desktop */}\n      <div className=\"justify-between items-center flex-grow pr-6 hidden md:flex\">\n        <Typography>{capitalize(item.name)}</Typography>\n        <Typography currency className=\"text-right\">\n          {item.amount}\n        </Typography>\n      </div>\n\n      {/* Mobile */}\n      <div className=\"flex flex-col md:hidden\">\n        <Typography className=\"leading-none\">\n          {capitalize(item.name)}\n        </Typography>\n        <Typography currency className=\"opacity-80 text-[.9rem] leading-none\">\n          {item.amount}\n        </Typography>\n      </div>\n      <div className=\"flex justify-self-end\">\n        <Button\n          className={`size-[45px] font-arial font-bold md:hover:bg-green-300 md:hover:border-green-300 md:hover:text-black active:bg-white active:border-white ml-1 active:text-black Default-outline`}\n          onClick={() => setEditingDebtItem(true)}\n        >\n          <FontAwesomeIcon icon={faPenToSquare} />\n        </Button>\n        <Button\n          onClick={deleteItem}\n          className={`size-[45px] font-arial font-bold md:hover:bg-green-300 md:hover:border-green-300 md:hover:text-black active:bg-white active:border-white ml-1 active:text-black Default-outline`}\n        >\n          <FontAwesomeIcon icon={faTrashCan} />\n        </Button>\n      </div>\n    </div>\n  ) : (\n    <EditDebtItemForm item={item} setEditingDebtItem={setEditingDebtItem} />\n  );\n\n  async function deleteItem(): Promise<void> {\n    try {\n      const filtered: IDebtItem[] = debtItems.filter(\n        (dItem) => dItem.id !== item.id\n      );\n      setAppState({ debtItems: filtered });\n    } catch (err) {\n      console.error(\"Failed to delete debt item:\", err);\n    }\n  }\n}\n\ninterface IDebtItemProps {\n  item: IDebtItem;\n  className?: string;\n}\n\ninterface IDebtItem {\n  id: number;\n  name: string;\n  amount: number;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;;;;;;;;;;;AAIe,SAAS,SAAS,EAAE,IAAI,EAAE,SAAS,EAAkB;;IAClE,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,2HAAA,CAAA,UAAW,AAAD;IAE7C,OAAO,CAAC,gCACN,6LAAC;QACC,WAAW,CAAC;4GAC0F,EAAE,UAAU;IACpH,CAAC;;0BAGC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,6IAAA,CAAA,UAAU;kCAAE,CAAA,GAAA,mHAAA,CAAA,aAAU,AAAD,EAAE,KAAK,IAAI;;;;;;kCACjC,6LAAC,6IAAA,CAAA,UAAU;wBAAC,QAAQ;wBAAC,WAAU;kCAC5B,KAAK,MAAM;;;;;;;;;;;;0BAKhB,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,6IAAA,CAAA,UAAU;wBAAC,WAAU;kCACnB,CAAA,GAAA,mHAAA,CAAA,aAAU,AAAD,EAAE,KAAK,IAAI;;;;;;kCAEvB,6LAAC,6IAAA,CAAA,UAAU;wBAAC,QAAQ;wBAAC,WAAU;kCAC5B,KAAK,MAAM;;;;;;;;;;;;0BAGhB,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,yIAAA,CAAA,UAAM;wBACL,WAAW,CAAC,+KAA+K,CAAC;wBAC5L,SAAS,IAAM,mBAAmB;kCAElC,cAAA,6LAAC,uKAAA,CAAA,kBAAe;4BAAC,MAAM,6KAAA,CAAA,gBAAa;;;;;;;;;;;kCAEtC,6LAAC,yIAAA,CAAA,UAAM;wBACL,SAAS;wBACT,WAAW,CAAC,+KAA+K,CAAC;kCAE5L,cAAA,6LAAC,uKAAA,CAAA,kBAAe;4BAAC,MAAM,6KAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;;;;;;6BAKvC,6LAAC,yIAAA,CAAA,UAAgB;QAAC,MAAM;QAAM,oBAAoB;;;;;;;IAGpD,eAAe;QACb,IAAI;YACF,MAAM,WAAwB,UAAU,MAAM,CAC5C,CAAC,QAAU,MAAM,EAAE,KAAK,KAAK,EAAE;YAEjC,YAAY;gBAAE,WAAW;YAAS;QACpC,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,+BAA+B;QAC/C;IACF;AACF;GAxDwB;;QAEa,2HAAA,CAAA,UAAW;;;KAFxB"}},
    {"offset": {"line": 2397, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2403, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelfrederickson/coding/github/budget-calculator-demo/app/components/DebtTotal.tsx"],"sourcesContent":["import React from \"react\";\nimport Typography from \"./common/Typography\";\n\nexport default function DebtTotal({ total }: { total: number }) {\n  return (\n    <div className=\"flex items-center justify-between px-2 gap-6 border-4 border-green-300 text-[2rem] leading-snug\">\n      <Typography>Total</Typography>\n      <Typography currency>{total}</Typography>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;;;AAEe,SAAS,UAAU,EAAE,KAAK,EAAqB;IAC5D,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,6IAAA,CAAA,UAAU;0BAAC;;;;;;0BACZ,6LAAC,6IAAA,CAAA,UAAU;gBAAC,QAAQ;0BAAE;;;;;;;;;;;;AAG5B;KAPwB"}},
    {"offset": {"line": 2442, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2448, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelfrederickson/coding/github/budget-calculator-demo/app/components/DebtItemList.tsx"],"sourcesContent":["import AddDebtItemForm from \"./AddDebtItemForm\";\nimport DebtItem from \"./DebtItem\";\nimport DebtTotal from \"./DebtTotal\";\nimport useAppStore from \"../store/appStore\";\n\nexport default function DebtItemList({ items, className }: IDebtItemListProps) {\n  const { addingDebtItem } = useAppStore();\n  const sortedDebtItems = items.sort((a, b) => a.amount - b.amount);\n\n  return (\n    <div className={`DEBT-ITEM-LIST flex-grow ${className}`}>\n      {addingDebtItem && <AddDebtItemForm />}\n      {sortedDebtItems.map((item, i) => (\n        <DebtItem key={i} item={item} />\n      ))}\n      {items.length > 1 && <DebtTotal total={calculateDebtTotal(items)} />}\n    </div>\n  );\n\n  function calculateDebtTotal(debtItems: IDebtItem[]): number {\n    let totalInCents: number = 0;\n\n    for (const item of debtItems) {\n      const amountInCents = Math.round(item.amount * 100);\n      totalInCents += Math.floor(amountInCents);\n    }\n\n    return totalInCents / 100;\n  }\n}\n\ninterface IDebtItemListProps {\n  items: IDebtItem[];\n  className?: string;\n}\ninterface IDebtItem {\n  id: number;\n  name: string;\n  amount: number;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;;AAEe,SAAS,aAAa,EAAE,KAAK,EAAE,SAAS,EAAsB;;IAC3E,MAAM,EAAE,cAAc,EAAE,GAAG,CAAA,GAAA,2HAAA,CAAA,UAAW,AAAD;IACrC,MAAM,kBAAkB,MAAM,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,MAAM,GAAG,EAAE,MAAM;IAEhE,qBACE,6LAAC;QAAI,WAAW,CAAC,yBAAyB,EAAE,WAAW;;YACpD,gCAAkB,6LAAC,wIAAA,CAAA,UAAe;;;;;YAClC,gBAAgB,GAAG,CAAC,CAAC,MAAM,kBAC1B,6LAAC,iIAAA,CAAA,UAAQ;oBAAS,MAAM;mBAAT;;;;;YAEhB,MAAM,MAAM,GAAG,mBAAK,6LAAC,kIAAA,CAAA,UAAS;gBAAC,OAAO,mBAAmB;;;;;;;;;;;;;IAI9D,SAAS,mBAAmB,SAAsB;QAChD,IAAI,eAAuB;QAE3B,KAAK,MAAM,QAAQ,UAAW;YAC5B,MAAM,gBAAgB,KAAK,KAAK,CAAC,KAAK,MAAM,GAAG;YAC/C,gBAAgB,KAAK,KAAK,CAAC;QAC7B;QAEA,OAAO,eAAe;IACxB;AACF;GAxBwB;;QACK,2HAAA,CAAA,UAAW;;;KADhB"}},
    {"offset": {"line": 2515, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2521, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelfrederickson/coding/github/budget-calculator-demo/app/components/DebtItemPanel.tsx"],"sourcesContent":["import DebtItemList from \"./DebtItemList\";\nimport PanelHeader from \"./common/PanelHeader\";\nimport { useState } from \"react\";\nimport useAppStore from \"../store/appStore\";\n\nexport default function DebtItemPanel({ items }: IDebtItemPanelProps) {\n  const [collapsed, setCollapsed] = useState(false);\n  const { setAppState } = useAppStore();\n\n  return (\n    <div className=\"DEBT-ITEM-PANEL flex flex-col border border-green-300 Default-outline\">\n      <PanelHeader\n        defaultText=\"Debt Breakdown\"\n        collapsed={collapsed}\n        setCollapsed={setCollapsed}\n        onButtonClick={() => setAppState({ addingDebtItem: true })}\n      />\n      <DebtItemList items={items} className={collapsed ? \"hidden\" : \"\"} />\n    </div>\n  );\n}\n\ninterface IDebtItem {\n  id: number;\n  name: string;\n  amount: number;\n}\n\ninterface IDebtItemPanelProps {\n  items: IDebtItem[];\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;;AAEe,SAAS,cAAc,EAAE,KAAK,EAAuB;;IAClE,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,2HAAA,CAAA,UAAW,AAAD;IAElC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,8IAAA,CAAA,UAAW;gBACV,aAAY;gBACZ,WAAW;gBACX,cAAc;gBACd,eAAe,IAAM,YAAY;wBAAE,gBAAgB;oBAAK;;;;;;0BAE1D,6LAAC,qIAAA,CAAA,UAAY;gBAAC,OAAO;gBAAO,WAAW,YAAY,WAAW;;;;;;;;;;;;AAGpE;GAfwB;;QAEE,2HAAA,CAAA,UAAW;;;KAFb"}},
    {"offset": {"line": 2580, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2586, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelfrederickson/coding/github/budget-calculator-demo/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport Header from \"./components/Header\";\nimport Breakdown from \"./components/Breakdown\";\nimport Typography from \"./components/common/Typography\";\nimport BudgetItemPanel from \"./components/BudgetItemPanel\";\nimport DebtItemPanel from \"./components/DebtItemPanel\";\nimport { sortByFullDate } from \"@/utils/helpers\";\nimport { useEffect } from \"react\";\nimport useAppStore from \"./store/appStore\";\n\nexport default function Home() {\n  const { budgetItems, debtItems, monthlyIncome, loading, setAppState } =\n    useAppStore();\n\n  useEffect(() => {\n    async function fetchInitialAppData() {\n      setAppState({ loading: true });\n      try {\n        setAppState({\n          budgetItems,\n          debtItems,\n          monthlyIncome,\n          loading: false,\n        });\n      } catch (err) {\n        console.error(\"Failed to fetch initial app data:\", err);\n        setAppState({\n          budgetItems: [],\n          debtItems: [],\n          monthlyIncome: 0,\n          loading: false,\n        });\n      }\n    }\n    fetchInitialAppData();\n  }, []);\n\n  useEffect(() => {\n    getNearestPaymentDate();\n  }, [budgetItems]);\n\n  return loading ? (\n    <Typography>The matrix has you, Neo.</Typography>\n  ) : (\n    <div className=\"HOME p-2 flex flex-col gap-8 md:p-6\">\n      <Header />\n      <Breakdown\n        monthlyTotal={calculateMonthlyTotal(budgetItems)}\n        monthlyIncome={monthlyIncome}\n      />\n      <BudgetItemPanel budgetItems={budgetItems} />\n      <DebtItemPanel items={debtItems} />\n    </div>\n  );\n\n  function calculateMonthlyTotal(budgetItems: IBudgetItem[]): number {\n    const freqMapping = { BiWeekly: 0.5, Monthly: 1, Yearly: 12 };\n\n    let monthlyTotalInCents: number = 0;\n\n    for (const item of budgetItems) {\n      const costInCents = Math.round(item.cost * 100);\n      const monthlyCostInCents = Math.round(\n        costInCents / freqMapping[item.freq]\n      );\n\n      monthlyTotalInCents += Math.ceil(monthlyCostInCents);\n    }\n\n    return monthlyTotalInCents / 100;\n  }\n\n  function getNearestPaymentDate() {\n    const nearestPaymentDate = sortByFullDate([...budgetItems])[0]?.startDate;\n    setAppState({ nearestPaymentDate });\n  }\n}\n\ninterface IBudgetItem {\n  id: number;\n  name: string;\n  cost: number;\n  freq: string;\n  startDate: string;\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AATA;;;;;;;;;AAWe,SAAS;;IACtB,MAAM,EAAE,WAAW,EAAE,SAAS,EAAE,aAAa,EAAE,OAAO,EAAE,WAAW,EAAE,GACnE,CAAA,GAAA,2HAAA,CAAA,UAAW,AAAD;IAEZ,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR,eAAe;gBACb,YAAY;oBAAE,SAAS;gBAAK;gBAC5B,IAAI;oBACF,YAAY;wBACV;wBACA;wBACA;wBACA,SAAS;oBACX;gBACF,EAAE,OAAO,KAAK;oBACZ,QAAQ,KAAK,CAAC,qCAAqC;oBACnD,YAAY;wBACV,aAAa,EAAE;wBACf,WAAW,EAAE;wBACb,eAAe;wBACf,SAAS;oBACX;gBACF;YACF;YACA;QACF;yBAAG,EAAE;IAEL,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR;QACF;yBAAG;QAAC;KAAY;IAEhB,OAAO,wBACL,6LAAC,6IAAA,CAAA,UAAU;kBAAC;;;;;6BAEZ,6LAAC;QAAI,WAAU;;0BACb,6LAAC,+HAAA,CAAA,UAAM;;;;;0BACP,6LAAC,kIAAA,CAAA,UAAS;gBACR,cAAc,sBAAsB;gBACpC,eAAe;;;;;;0BAEjB,6LAAC,wIAAA,CAAA,UAAe;gBAAC,aAAa;;;;;;0BAC9B,6LAAC,sIAAA,CAAA,UAAa;gBAAC,OAAO;;;;;;;;;;;;;IAI1B,SAAS,sBAAsB,WAA0B;QACvD,MAAM,cAAc;YAAE,UAAU;YAAK,SAAS;YAAG,QAAQ;QAAG;QAE5D,IAAI,sBAA8B;QAElC,KAAK,MAAM,QAAQ,YAAa;YAC9B,MAAM,cAAc,KAAK,KAAK,CAAC,KAAK,IAAI,GAAG;YAC3C,MAAM,qBAAqB,KAAK,KAAK,CACnC,cAAc,WAAW,CAAC,KAAK,IAAI,CAAC;YAGtC,uBAAuB,KAAK,IAAI,CAAC;QACnC;QAEA,OAAO,sBAAsB;IAC/B;IAEA,SAAS;QACP,MAAM,qBAAqB,CAAA,GAAA,mHAAA,CAAA,iBAAc,AAAD,EAAE;eAAI;SAAY,CAAC,CAAC,EAAE,EAAE;QAChE,YAAY;YAAE;QAAmB;IACnC;AACF;GAlEwB;;QAEpB,2HAAA,CAAA,UAAW;;;KAFS"}},
    {"offset": {"line": 2722, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}